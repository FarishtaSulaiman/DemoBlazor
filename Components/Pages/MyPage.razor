@page "/mypage"
@using DemoBlazor.Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager Navigation
@inject ProtectedSessionStorage SessionStorage
@using System.Collections.Generic


<h1>Welcome to MyPage!</h1>

<h2>Your shopping lists:</h2>

<!-- Lista med shoppinglistor -->
<ul class="list-group">
    @foreach (var list in shoppingLists)
    {
        <li class="list-group-item">
            <!-- Klickbar listtitel för att visa detaljer -->
            <span class="list-title" @onclick="() => ShowListDetails(list.Title)">
                @list.Title
            </span>
                <!-- Ta bort shoppinglista -->
                <button class="btn btn-danger small-btn" @onclick="() => RemoveShoppingList(list)">
                    <i class="bi bi-trash"></i> 
                </button>
                <!-- Redigera shoppinglista -->
                <button class="btn btn-primary small-btn" @onclick="() => EditShoppingList(list)">
                    <i class="bi bi-pencil"></i> 
                </button>
        </li>
    }
</ul>

@if (selectedList != null)
{
    <h3>Products in @selectedList.Title:</h3>
    <ul>
        @foreach (var product in GetProductsForList(selectedList.Title))
        {
            <li>@product.Name - @product.Amount</li>
        }
    </ul>
}

<button class="btnEditShoppinglist" @onclick="SaveShoppingList">Save</button>

<a href="/CreateNewShoppingList" class="btnNewShoppingList">Go to Create New Shopping List</a>

@* <button class="btnEditShoppinglist" @onclick="SaveEditedList">Save</button> *@


@code {

    // Mockad lista av produkter
    private List<Product> products = new List<Product>
    {
        new Product { ShoppingListName = "Weekly Groceries", Name = "Apple", Amount = 1 },
        new Product { ShoppingListName = "Weekly Groceries", Name = "Banana", Amount = 2 },
        new Product { ShoppingListName = "Dinner Shopping", Name = "Cream", Amount = 1 },
        new Product { ShoppingListName = "Dinner Shopping", Name = "Cottage Cheese", Amount = 1 },
        new Product { ShoppingListName = "Weekly Groceries", Name = "Orange", Amount = 3 }
    };

    // Lista av shoppinglistor
    private List<ShoppingList> shoppingLists = new List<ShoppingList>
    {
        new ShoppingList { Id = 1, Title = "Weekly Groceries" },
        new ShoppingList { Id = 2, Title = "Dinner Shopping" }
    };

    // Den valda shoppinglistan för att visa produkter
    private ShoppingList selectedList;

    // Funktion för att visa produkter för en viss shoppinglista
    private List<Product> GetProductsForList(string listName)
    {
        return products.Where(p => p.ShoppingListName == listName).ToList();
    }

    // Funktion som körs när en shoppinglista klickas
    private void ShowListDetails(string listTitle)
    {
        selectedList = shoppingLists.FirstOrDefault(list => list.Title == listTitle);
    }

    // Ta bort en shoppinglista
    private void RemoveShoppingList(ShoppingList list)
    {
        shoppingLists.Remove(list);

        // Ta bort alla produkter som tillhör den borttagna shoppinglistan
        products.RemoveAll(p => p.ShoppingListName == list.Title);
    }

    // Redigera shoppinglista (kan implementeras för att tillåta redigering)
    private void EditShoppingList(ShoppingList list)
    {
        // Implementera logik för att redigera listan
        Console.WriteLine($"Edit list: {list.Title}");
    }

    // Spara shoppinglistan (detta kan användas för att t.ex. spara till session)
    private async Task SaveShoppingList()
    {
        var mockData = new ShoppingList
            {
                Id = 1,
                Title = "My Shopping List"
            };

        // Spara shoppinglistan i ProtectedSessionStorage
        await SessionStorage.SetAsync("ShoppingList", mockData);
    }
}

<style>
    .btnNewShoppingList,
    .btnEditShoppinglist {
        padding: 10px 20px;
        border-radius: 10px;
        background-color: #007bff;
        color: white;
        font-size: 16px;
        text-decoration: none; /* Tar bort understrykning */
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btnNewShoppingList:hover
        .btnEditShoppinglist:hover {
            background-color: #0056b3;
        }

        .btnNewShoppingList:focus
        .btnEditShoppinglist:focus {
            outline: none;
        }

    /* Justera storleken på knapparna genom att minska paddingen */
    .small-btn {
        padding: 5px 10px; /* Minska paddingen */
        font-size: 12px; /* Minska textstorleken */
    }

</style>
